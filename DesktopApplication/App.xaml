<Application x:Class="DesktopApplication.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:view="clr-namespace:DesktopApplication.View"
             StartupUri="/View/WelcomeWindow.xaml">
    <Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="View/Styles/TitleBarStyles.xaml"/>
				<ResourceDictionary Source="View/Styles/ScrollViewerStyles.xaml"/>
				<ResourceDictionary Source="View/Styles/BrushesAndColors.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			
		    <FontFamily x:Key="Poppins">pack://application:,,,/View/Fonts/#Poppins</FontFamily>
		    <FontFamily x:Key="RobotoMono">pack://application:,,,/View/Fonts/#Roboto Mono</FontFamily>
			
			<Style TargetType="Image" x:Key="Fant">
				<Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
			</Style>
		    
		    <Style TargetType="Window"> 
			    <Setter Property="FontFamily" Value="{StaticResource Poppins}" />             
		    </Style> 
			
			<Style TargetType="ToolTip">
				<Setter Property="Foreground" Value="{DynamicResource Text}"/>
				<Setter Property="Background" Value="{DynamicResource Background1}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource Text}"/>
			</Style>
			
			<ControlTemplate TargetType="Button" x:Key="RoundedButton">
				<Border CornerRadius="5" Background="{TemplateBinding Background}"
				        Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
				        Padding="5">
					<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
				</Border>
				
				<ControlTemplate.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="{Binding Path=(view:AttachedProperties.HoverBackground),
	                        RelativeSource={RelativeSource TemplatedParent}}"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			
			<Style TargetType="Button" x:Key="ForegroundButton">
				<Setter Property="Foreground" Value="{DynamicResource Text}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Border Background="{TemplateBinding Background}"
							        Padding="{TemplateBinding Padding}"
							        Width="{TemplateBinding Width}"
							        Height="{TemplateBinding Height}">
								<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
							</Border>
							
							<ControlTemplate.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsEnabled" Value="True"/>
										<Condition Property="IsMouseOver" Value="True"/>
									</MultiTrigger.Conditions>
									<MultiTrigger.Setters>
										<Setter Property="Foreground" Value="{DynamicResource Primary1}"/>
									</MultiTrigger.Setters>
								</MultiTrigger>
								
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Foreground" Value="{DynamicResource Disabled}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			
			<Style TargetType="RadioButton" x:Key="ChangeRadioButton">
				<Setter Property="Foreground" Value="{DynamicResource Text}"/>
				<Setter Property="FontSize" Value="16"/>
				<Setter Property="FontWeight" Value="SemiBold"/>
				<Setter Property="Background" Value="{DynamicResource Background3}"/>
				<Setter Property="HorizontalAlignment" Value="Left"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="RadioButton">
							<Border Padding="15" Width="150" Background="{TemplateBinding Background}"
							        CornerRadius="3">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									
									<Border Grid.Column="0" Height="20" Width="20" CornerRadius="10" x:Name="Check"
									        BorderBrush="{DynamicResource Text}" BorderThickness="3"/>
									
									<ContentPresenter Grid.Column="1" VerticalAlignment="Center"
									                  HorizontalAlignment="Left" Margin="5, 0, 0, 0"/>
								</Grid>
							</Border>
							
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Setter TargetName="Check" Property="Background" Value="{DynamicResource Primary1}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			
			<ControlTemplate TargetType="Button" x:Key="WelcomeButtonTemplate">
				<Border Background="{TemplateBinding Background}" Width="{TemplateBinding Width}"
				        Padding="{TemplateBinding Padding}" Height="{TemplateBinding Height}"
				        CornerRadius="5 5 0 0">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
								    
						<Grid Grid.Row="0">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False"/>
						</Grid>
								    
						<Grid Grid.Row="1" Background="{DynamicResource Background3}">
							<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" 
							           Text="{TemplateBinding Name}" Margin="5"/>
						</Grid>
					</Grid>
				</Border>
						    
				<ControlTemplate.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Foreground" Value="{DynamicResource Primary1}"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		    
		    <Style TargetType="Button" x:Key="WelcomeButton">
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="20"/>
			    <Setter Property="Background" Value="{DynamicResource Background2}"/>
			    <Setter Property="Template" Value="{StaticResource WelcomeButtonTemplate}"/>
		    </Style>
			
			<ControlTemplate TargetType="Button" x:Key="PrimaryGradientTemplate">
				<Border CornerRadius="{Binding Path=(view:AttachedProperties.ButtonCornerRadius),
	                        RelativeSource={RelativeSource TemplatedParent}}" 
				        Padding="{TemplateBinding Padding}" x:Name="Border"
				        Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
					<Border.Background>
						<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
							<GradientStop Color="{DynamicResource Primary1Color}" Offset="0.0"/>
							<GradientStop Color="{DynamicResource Secondary2Color}" Offset="1.0"/>
						</LinearGradientBrush>
					</Border.Background>
					<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False"/>
				</Border>
						    
				<ControlTemplate.Triggers>
					<Trigger Property="IsEnabled" Value="False">
						<Setter TargetName="Border" Property="Background" Value="{DynamicResource Disabled}"/>
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsEnabled" Value="True"/>
							<Condition Property="IsMouseOver" Value="True"/>
						</MultiTrigger.Conditions>
						<MultiTrigger.Setters>
							<!--TODO-->
						</MultiTrigger.Setters>
					</MultiTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		    
		    <Style TargetType="Button" x:Key="PrimaryGradientButton">
			    <Setter Property="view:AttachedProperties.ButtonCornerRadius" Value="3"/>
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontWeight" Value="SemiBold"/>
			    <Setter Property="Padding" Value="10, 6"/>
			    <Setter Property="Template" Value="{StaticResource PrimaryGradientTemplate}"/>
		    </Style>
			
			<Style TargetType="Button" x:Key="BigPrimaryGradientButton">
				<Setter Property="view:AttachedProperties.ButtonCornerRadius" Value="10"/>
				<Setter Property="FontSize" Value="30"></Setter>
				<Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontWeight" Value="Bold"/>
				<Setter Property="Template" Value="{StaticResource PrimaryGradientTemplate}"/>
			</Style>
		    
		    <Style TargetType="Button" x:Key="BorderButton">
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="16"/>
			    <Setter Property="FontWeight" Value="Bold"/>
			    <Setter Property="BorderBrush" Value="Transparent"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="Button">
						    <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}"
						            Background="{TemplateBinding Background}" Padding="18, 10"
						            CornerRadius="5">
							    <ContentPresenter HorizontalAlignment="Center"
							                      VerticalAlignment="Center"/>
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsMouseOver" Value="True">
								    <Setter Property="BorderBrush" Value="{DynamicResource Text}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
			
			<Style TargetType="TextBox" x:Key="SimpleTextBox">
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="CaretBrush" Value="{DynamicResource Text}"/>
				<Setter Property="Foreground" Value="{DynamicResource Text}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="TextBox">
							<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
								<ScrollViewer
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									x:Name="PART_ContentHost"
									HorizontalScrollBarVisibility="Disabled"
									VerticalScrollBarVisibility="Disabled"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		    
		    <Style TargetType="TextBox" x:Key="HideableTextBox">
			    <Setter Property="Background" Value="Transparent"/>
			    <Setter Property="CaretBrush" Value="{DynamicResource Text}"/>
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="Height" Value="25"/>
			    <Setter Property="FontSize" Value="15"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="TextBox">
						    <Border HorizontalAlignment="Stretch" VerticalAlignment="Center"
						            BorderBrush="{DynamicResource Text}" BorderThickness="1"
						            Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
						            Background="{TemplateBinding Background}"
						            CornerRadius="3">
							    <ScrollViewer
								    Margin="3, 0, 3, 0"
								    HorizontalAlignment="Stretch"
								    VerticalAlignment="Center"
								    x:Name="PART_ContentHost"
								    HorizontalScrollBarVisibility="Disabled"
								    VerticalScrollBarVisibility="Disabled"/>
						    </Border>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <Style TargetType="TextBox" x:Key="SettingTextBox">
			    <Setter Property="Background" Value="{DynamicResource Background3}"/>
			    <Setter Property="BorderBrush" Value="{DynamicResource Text}"/>
			    <Setter Property="CaretBrush" Value="{DynamicResource Text}"/>
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="Height" Value="20"/>
			    <Setter Property="FontSize" Value="14"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="TextBox">
						    <Border HorizontalAlignment="Left" VerticalAlignment="Center"
						            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"
						            Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
						            Background="{TemplateBinding Background}">
							    <ScrollViewer
								    Margin="3, 0, 3, 0"
								    HorizontalAlignment="Stretch"
								    VerticalAlignment="Center"
								    x:Name="PART_ContentHost"
								    HorizontalScrollBarVisibility="Disabled"
								    VerticalScrollBarVisibility="Disabled"/>
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsFocused" Value="True">
								    <Setter Property="BorderBrush" Value="{DynamicResource Primary1}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <Style TargetType="CheckBox" x:Key="SettingCheckbox">
			    <Setter Property="BorderBrush" Value="{DynamicResource Text}"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="CheckBox">
						    <Grid>
							    <Grid.ColumnDefinitions>
								    <ColumnDefinition Width="Auto"/>
								    <ColumnDefinition Width="Auto"/>
							    </Grid.ColumnDefinitions>
							    
							    <Border Grid.Column="0" Margin="0 0 5 0" BorderThickness="1"
							            BorderBrush="{TemplateBinding BorderBrush}" VerticalAlignment="Center"
							            HorizontalAlignment="Center" Background="Transparent">
								    <Path Width="16" Height="16" Stroke="{DynamicResource Primary1}"
								          Visibility="Hidden" Data="M 3,10 8,13 13,3" StrokeThickness="2" x:Name="Check"/>
							    </Border>
							    
							    <ContentPresenter Grid.Column="1"
							                      HorizontalAlignment="Center"
							                      VerticalAlignment="Center"
							                      Focusable="False"/>
						    </Grid>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsChecked" Value="True">
								    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
							    </Trigger>
							    <Trigger Property="IsMouseOver" Value="True">
								    <Setter Property="BorderBrush" Value="{DynamicResource Secondary1}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <Style TargetType="RadioButton" x:Key="SideControlRadioButton">
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="Background" Value="Transparent"></Setter>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="RadioButton">
						    <Border Padding="5" Width="{TemplateBinding Width}" 
						            CornerRadius="5" Height="{TemplateBinding Height}"
						            Background="{TemplateBinding Background}">
							    <ContentPresenter
								    Margin="0"
								    HorizontalAlignment="Center"
								    VerticalAlignment="Center"
								    Focusable="False"/>
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <MultiTrigger>
								    <MultiTrigger.Conditions>
									    <Condition Property="IsMouseOver" Value="True"/>
									    <Condition Property="IsChecked" Value="False"/>
								    </MultiTrigger.Conditions>
								    
								    <MultiTrigger.Setters>
									    <Setter Property="Foreground" Value="{DynamicResource Primary1}"/>
								    </MultiTrigger.Setters>
							    </MultiTrigger>
							    
							    <Trigger Property="IsChecked" Value="True">
								    <Setter Property="Background" Value="{DynamicResource Primary1}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <Style TargetType="Button" x:Key="SimpleHoverButton">
			    <Setter Property="Background" Value="Transparent"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="Button">
						    <Border BorderThickness="0" Background="{TemplateBinding Background}"
						            Padding="{TemplateBinding Padding}">
							    <ContentPresenter
								    Margin="0"
								    HorizontalAlignment="Center"
								    VerticalAlignment="Center"
								    Focusable="False"/>
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <MultiTrigger>
								    <MultiTrigger.Conditions>
									    <Condition Property="IsMouseOver" Value="True"/>
									    <Condition Property="IsEnabled" Value="True"/>
								    </MultiTrigger.Conditions>
								    <MultiTrigger.Setters>
									    <Setter Property="Background" Value="{DynamicResource Background3}"/>
								    </MultiTrigger.Setters>
							    </MultiTrigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <Style TargetType="Button" x:Key="OptionSelectorButton">
			    <Setter Property="Background" Value="{DynamicResource Background2}"/>
			    <Setter Property="BorderBrush" Value="{DynamicResource Background3}"></Setter>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="Button">
						    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"
						            Background="{TemplateBinding Background}">
							    <ContentPresenter
								    Margin="0"
								    HorizontalAlignment="Center"
								    VerticalAlignment="Center"
								    Focusable="False"/>
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsMouseOver" Value="True">
								    <Setter Property="BorderBrush" Value="{DynamicResource Primary1}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <Style TargetType="CheckBox" x:Key="OnOffCheckBox">
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="16"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="CheckBox">
						    <Grid>
							    <Grid.RowDefinitions>
								    <RowDefinition Height="Auto"/>
								    <RowDefinition Height="Auto"/>
							    </Grid.RowDefinitions>
							    
							    <ContentPresenter Grid.Row="0"
								    Margin="0, 0, 0, 10"
								    HorizontalAlignment="Center"
								    VerticalAlignment="Center"
								    Focusable="False"/>
							    
							    <Grid Grid.Row="1" Background="{DynamicResource Background2}" Width="80">
								    <Border BorderBrush="{DynamicResource Text}" BorderThickness="1"
								            x:Name="Border" Width="30" Height="30" Background="{DynamicResource Background3}">
									    <TextBlock x:Name="Block" Foreground="{DynamicResource Text}"
									               VerticalAlignment="Center" HorizontalAlignment="Center"/>
								    </Border>
							    </Grid>
						    </Grid>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsChecked" Value="True">
								    <Setter TargetName="Border" Property="HorizontalAlignment" Value="Left"/>
								    <Setter TargetName="Block" Property="Text" Value="On"/>
								    <Setter TargetName="Block" Property="Foreground" Value="{DynamicResource On}"></Setter>
							    </Trigger>
							    <Trigger Property="IsChecked" Value="False">
								    <Setter TargetName="Border" Property="HorizontalAlignment" Value="Right"/>
								    <Setter TargetName="Block" Property="Text" Value="Off"/>
								    <Setter TargetName="Block" Property="Foreground" Value="{DynamicResource Off}"/>
							    </Trigger>
							    <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
								    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Primary1}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <Style TargetType="TextBlock" x:Key="SimpleHoverBlock">
			    <Setter Property="FontSize" Value="16"/>
			    <Setter Property="Padding" Value="5"/>
			    <Style.Triggers>
				    <Trigger Property="IsMouseOver" Value="True">
					    <Setter Property="Background" Value="{DynamicResource Background3}"/>
				    </Trigger>
			    </Style.Triggers>
		    </Style>
		    
		    <Style TargetType="TextBlock" x:Key="SearchResult">
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="16"/>
			    <Setter Property="Padding" Value="5"/>
			    <Style.Triggers>
				    <Trigger Property="IsMouseOver" Value="True">
					    <Setter Property="Background" Value="{DynamicResource Background3}"/>
				    </Trigger>
			    </Style.Triggers>
		    </Style>
		    
		    <Style TargetType="TextBox" x:Key="SearchTextBox">
			    <Setter Property="FontSize" Value="18"/>
			    <Setter Property="Foreground" Value="{DynamicResource Disabled}"/>
			    <Setter Property="BorderBrush" Value="{DynamicResource Text}"/>
			    <Setter Property="CaretBrush" Value="{DynamicResource Text}"/>
			    <Setter Property="Height" Value="30"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="TextBox">
						    <Border HorizontalAlignment="Stretch" VerticalAlignment="Top"
						            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"
						            Height="{TemplateBinding Height}">
							    <ScrollViewer
								    Margin="3, 0, 0, 0"
								    HorizontalAlignment="Stretch"
								    VerticalAlignment="Center"
								    x:Name="PART_ContentHost"
								    HorizontalScrollBarVisibility="Disabled"
								    VerticalScrollBarVisibility="Disabled"/>
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsFocused" Value="True">
								    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
								    <Setter Property="BorderBrush" Value="{DynamicResource Primary1}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <Style TargetType="Border" x:Key="DimensionChooserButton">
			    <Setter Property="Background" Value="{DynamicResource Primary2}"/>
			    <Style.Triggers>
				    <Trigger Property="IsMouseOver" Value="True">
					    <Setter Property="Background" Value="{DynamicResource Primary1}"/>
				    </Trigger>
			    </Style.Triggers>
		    </Style>
		    
		    <Style TargetType="Button" x:Key="HideableTextBoxButton">
			    <Setter Property="Background" Value="{DynamicResource Background2}"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="Button">
						    <Border Background="{TemplateBinding Background}" BorderThickness="1, 0, 1, 1" BorderBrush="{DynamicResource Text}">
							    <ContentPresenter
								    Margin="0"
								    HorizontalAlignment="Center"
								    VerticalAlignment="Center"
								    Focusable="False"/>
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsMouseOver" Value="True">
								    <Setter Property="Background" Value="{DynamicResource Primary1}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
			
			<Style TargetType="RadioButton" x:Key="PossibilitySelectRadioButton">
				<Setter Property="Foreground" Value="{DynamicResource Text}"/>
				<Setter Property="FontSize" Value="20"/>
				<Setter Property="FontWeight" Value="Bold"/>
				<Setter Property="Background" Value="{DynamicResource Background3}"/>
				<Setter Property="Width" Value="32"/>
				<Setter Property="Height" Value="32"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="RadioButton">
							<Border Background="{TemplateBinding Background}" 
							        Padding="{TemplateBinding Padding}" CornerRadius="5">
								<ContentPresenter VerticalAlignment="Center"
								                  HorizontalAlignment="Center"/>
							</Border>
							
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Setter Property="Background" Value="{DynamicResource Primary1}"/>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsChecked" Value="False"/>
										<Condition Property="IsMouseOver" Value="True"/>
									</MultiTrigger.Conditions>
									<MultiTrigger.Setters>
										<Setter Property="Foreground" Value="{DynamicResource Primary1}"/>
									</MultiTrigger.Setters>
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		    
		    <Style TargetType="RadioButton" x:Key="SettingTitleRadioButton">
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="16"/>
			    <Setter Property="Background" Value="Transparent"/>
			    <Setter Property="HorizontalAlignment" Value="Stretch"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="RadioButton">
						    <Border Background="{TemplateBinding Background}"
						            BorderThickness="0" Padding="5, 10" CornerRadius="10, 0, 0, 10">
							    <ContentPresenter VerticalAlignment="Center"
							                      HorizontalAlignment="Center"/>
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsChecked" Value="True">
								    <Setter Property="Background" Value="{DynamicResource Background2}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <Style x:Key="BottomSelectionRadioButtonStyle" TargetType="RadioButton">
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="18"/>
			    <Setter Property="FontWeight" Value="SemiBold"/>
			    <Setter Property="VerticalAlignment" Value="Stretch"/>
			    <Setter Property="Width" Value="200"/>
			    <Setter Property="Background" Value="Transparent"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="RadioButton">
						    <Border x:Name="CheckBorder" BorderThickness="0, 0, 0, 2"
						            BorderBrush="{TemplateBinding Background}"
						            Background="{TemplateBinding Background}"
						            VerticalAlignment="{TemplateBinding VerticalAlignment}"
						            HorizontalAlignment="{TemplateBinding VerticalAlignment}"
						            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
							    
							    <ContentPresenter
								    Margin="0"
								    HorizontalAlignment="Center"
								    VerticalAlignment="Center"
								    RecognizesAccessKey="True"
								    Content="{TemplateBinding Content}"/>
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsChecked" Value="True">
								    <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource Secondary1}"/>
							    </Trigger>
							    
							    <Trigger Property="IsMouseOver" Value="True">
								    <Setter Property="Background" Value="{DynamicResource Background3}"/>
								    <Setter Property="Foreground" Value="{DynamicResource Primary1}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter> 
		    </Style>
		    
		    <ControlTemplate TargetType="Button" x:Key="LightUpButtonTemplate">
			    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" 
			            Background="{TemplateBinding Background}" x:Name="OutsideBorder" Padding="{TemplateBinding Padding}"
			            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
				    <ContentPresenter
					    Margin="0"
					    HorizontalAlignment="Center"
					    VerticalAlignment="Center"/>
			    </Border>
						    
			    <ControlTemplate.Triggers>
				    <Trigger Property="IsMouseOver" Value="True">
					    <Setter TargetName="OutsideBorder" Property="Background" Value="{Binding Path=(view:AttachedProperties.HoverBackground),
	                        RelativeSource={RelativeSource TemplatedParent}}"/>
					    <Setter Property="BorderBrush" Value="{DynamicResource Text}"/>
				    </Trigger>
				    
				    <Trigger Property="IsEnabled" Value="False">
					    <Setter Property="Background" Value="{DynamicResource Disabled}"/>
				    </Trigger>
			    </ControlTemplate.Triggers>
		    </ControlTemplate>
		    
		    <Style x:Key="TimerButton" TargetType="Button">
			    <Setter Property="Background" Value="Transparent"/>
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="Template" Value="{StaticResource LightUpButtonTemplate}"/>
			    <Setter Property="BorderBrush" Value="Transparent"/>
			    <Setter Property="view:AttachedProperties.HoverBackground" Value="{DynamicResource Primary1}"/>
		    </Style>
		    
		    <Style x:Key="LogHighlightButton" TargetType="Button">
			    <Setter Property="Background" Value="{DynamicResource Background2}"/>
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="VerticalAlignment" Value="Center"/>
			    <Setter Property="Template" Value="{StaticResource LightUpButtonTemplate}"/>
			    <Setter Property="BorderBrush" Value="{DynamicResource Background3}"/>
			    <Setter Property="view:AttachedProperties.HoverBackground" Value="{DynamicResource Background3}"/>
		    </Style>
		    
		    <Style x:Key="DefaultLightUpButtonStyle" TargetType="Button">
			    <Setter Property="Background" Value="{DynamicResource Background2}"/>
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="18"/>
			    <Setter Property="Padding" Value="10"/>
			    <Setter Property="Template" Value="{StaticResource LightUpButtonTemplate}"/>
			    <Setter Property="BorderBrush" Value="{DynamicResource Background3}"/>
			    <Setter Property="view:AttachedProperties.HoverBackground" Value="{DynamicResource Background3}"/>
		    </Style>
		    
		    <Style x:Key="PrimaryLightUpButtonStyle" TargetType="Button">
			    <Setter Property="Background" Value="{DynamicResource Primary2}"/>
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="18"/>
			    <Setter Property="Padding" Value="10"/>
			    <Setter Property="Template" Value="{StaticResource LightUpButtonTemplate}"/>
			    <Setter Property="BorderBrush" Value="{DynamicResource Background3}"/>
			    <Setter Property="view:AttachedProperties.HoverBackground" Value="{DynamicResource Primary1}"/>
		    </Style>
		    
		    <Style x:Key="SecondaryLightUpButtonStyle" TargetType="Button">
			    <Setter Property="Background" Value="{DynamicResource Secondary2}"/>
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="18"/>
			    <Setter Property="Padding" Value="10"/>
			    <Setter Property="Template" Value="{StaticResource LightUpButtonTemplate}"/>
			    <Setter Property="BorderBrush" Value="{DynamicResource Background3}"/>
			    <Setter Property="view:AttachedProperties.HoverBackground" Value="{DynamicResource Secondary1}"/>
		    </Style>
		    
		    <Style x:Key="StepRadioButton" TargetType="RadioButton">
			    <Setter Property="Background" Value="Transparent"/>
			    <Setter Property="BorderBrush" Value="Transparent"/>
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="16"/>
			    <Setter Property="Width" Value="80"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="RadioButton">
						    <Border Width="{TemplateBinding Width}" BorderBrush="{TemplateBinding BorderBrush}"
						            Background="{TemplateBinding Background}" BorderThickness="0,0,0,2"
						            Padding="0 5">
							    <ContentPresenter
								    Margin="0"
								    HorizontalAlignment="Center"
								    VerticalAlignment="Center"
								    Focusable="False"
								    RecognizesAccessKey="True" />
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsMouseOver" Value="True">
								    <Setter Property="Background" Value="{DynamicResource Background3}"/>
							    </Trigger>
							    <Trigger Property="IsChecked" Value="True">
								    <Setter Property="BorderBrush" Value="{DynamicResource Text}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <ControlTemplate TargetType="Button" x:Key="FullColorButton">
			    <Border Padding="{TemplateBinding Padding}"
			            BorderThickness="0" Background="{TemplateBinding Background}"
			            CornerRadius="5">
				    <ContentPresenter
					    Margin="0"
					    HorizontalAlignment="Center"
					    VerticalAlignment="Center"
					    Focusable="False"
					    RecognizesAccessKey="True" />
			    </Border>
						    
			    <ControlTemplate.Triggers>
				    <Trigger Property="IsMouseOver" Value="True">
					    <Setter Property="Background" Value="{DynamicResource Accent}"></Setter>
				    </Trigger>
			    </ControlTemplate.Triggers>
		    </ControlTemplate>
		    
		    <Style x:Key="FullPrimaryButton" TargetType="Button">
			    <Setter Property="Foreground" Value="White"/>
			    <Setter Property="FontWeight" Value="Bold"/>
			    <Setter Property="Background" Value="{DynamicResource Primary1}"/>
			    <Setter Property="VerticalAlignment" Value="Center"/>
			    <Setter Property="Template" Value="{StaticResource FullColorButton}"/>
		    </Style>
		    
		    <Style x:Key="FullSecondaryButton" TargetType="Button">
			    <Setter Property="Foreground" Value="White"/>
			    <Setter Property="FontWeight" Value="Bold"/>
			    <Setter Property="Background" Value="{DynamicResource Secondary1}"/>
			    <Setter Property="VerticalAlignment" Value="Center"/>
			    <Setter Property="Template" Value="{StaticResource FullColorButton}"/>
		    </Style>
		    
		    <ControlTemplate x:Key="SettingComboToggleButton" TargetType="ToggleButton">
			    <Border x:Name="Border"
			            BorderThickness="1"
			            BorderBrush="{DynamicResource Text}"
			            Background="{DynamicResource Background2}">
				    <Grid>
					    <Grid.ColumnDefinitions>
						    <ColumnDefinition Width="*"/>
						    <ColumnDefinition Width="Auto"/>
					    </Grid.ColumnDefinitions>
				    
					    <Path x:Name="Arrow"
					          Width="20"
					          Height="20"
					          Grid.Column="1"
					          Stroke="{DynamicResource Text}"
					          HorizontalAlignment="Center"
					          VerticalAlignment="Center"
					          Data="M 5,8 10,12 15,8" >
					    </Path>
					</Grid>
			    </Border>
			    
			    <ControlTemplate.Triggers>
				    <Trigger Property="IsChecked" Value="True">
					    <Setter TargetName="Arrow" Property="Data" Value="M 5,12 10,8 15,12"/>
				    </Trigger>
			    </ControlTemplate.Triggers>
		    </ControlTemplate>

			<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
				<Border x:Name="PART_ContentHost"
			          Focusable="False"
			          Background="{TemplateBinding Background}" />
			</ControlTemplate>

			<Style x:Key="SettingComboBox" TargetType="ComboBox">
				<Setter Property="SnapsToDevicePixels" Value="true" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
				<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
				<Setter Property="MinWidth" Value="120" />
				<Setter Property="MinHeight" Value="20"/>
				<Setter Property="Foreground" Value="{DynamicResource Text}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ComboBox}">
							<Grid>
								<ToggleButton x:Name="ToggleButton"
			                        Template="{StaticResource SettingComboToggleButton}"
			                        Focusable="false"
			                        ClickMode="Press"
			                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
								<ContentPresenter x:Name="ContentSite"
			                            IsHitTestVisible="False"
			                            Content="{TemplateBinding SelectionBoxItem}"
			                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
			                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
			                            VerticalAlignment="Center"
			                            HorizontalAlignment="Center"/>
								<TextBox x:Name="PART_EditableTextBox"
								         Style="{x:Null}"
								         Template="{StaticResource ComboBoxTextBox}"
								         HorizontalAlignment="Center"
								         VerticalAlignment="Center"
								         Focusable="True"
								         Background="Transparent"
								         Visibility="Hidden"
								         IsReadOnly="{TemplateBinding IsReadOnly}" />
								<Popup x:Name="Popup"
								       Placement="Bottom"
								       IsOpen="{TemplateBinding IsDropDownOpen}"
								       AllowsTransparency="True"
								       Focusable="False"
								       PopupAnimation="Slide">
									<Grid x:Name="DropDown"
									      SnapsToDevicePixels="True"
									      MinWidth="{TemplateBinding ActualWidth}"
									      MaxHeight="{TemplateBinding MaxDropDownHeight}">
										<Border x:Name="DropDownBorder"
										                BorderThickness="1,0,1,1"
										                BorderBrush="{DynamicResource Text}"
										                Background="{DynamicResource Background3}"/>
										<ScrollViewer Margin="4,6" SnapsToDevicePixels="True">
											<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
										</ScrollViewer>
									</Grid>
								</Popup>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="HasItems" Value="false">
									<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="{x:Type ComboBoxItem}"
			       TargetType="{x:Type ComboBoxItem}">
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="OverridesDefaultStyle" Value="True"/>
				<Setter Property="Foreground" Value="{DynamicResource Text}"/>
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
						    <Border x:Name="Border"
						            Padding="20,3"
						            SnapsToDevicePixels="True"
						            Background="{TemplateBinding Background}">
							    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
						    </Border>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsMouseOver" Value="True">
								    <Setter Property="Background" Value="{DynamicResource Primary1}"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="Height" Value="19"/>
				<Setter Property="Width" Value="12"/>
				<Setter Property="BorderBrush" Value="Transparent"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Thumb">
							<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
							        BorderBrush="{TemplateBinding BorderBrush}" Background="{DynamicResource Text}"
							        BorderThickness="1"/>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="BorderBrush" Value="{DynamicResource Secondary1}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		    
		    <Style TargetType="Slider" x:Key="SettingSlider">
			    <Setter Property="SnapsToDevicePixels" Value="True"/>
			    <Setter Property="Orientation" Value="Horizontal"/>
			    <Setter Property="MinWidth" Value="104"/>
			    <Setter Property="MinHeight" Value="21"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="Slider">
							<Grid>
							    <Grid.RowDefinitions>
								    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
							    </Grid.RowDefinitions>
								
							    <Border x:Name="TrackBackground"
							            Margin="0"
							            Height="4"
							            Grid.Row="0"
							            Background="{DynamicResource Text}"/>
							    <Track Grid.Row="0" x:Name="PART_Track">
									<Track.Thumb>
										<Thumb Style="{StaticResource SliderThumbStyle}" />
									</Track.Thumb>
							    </Track>
							</Grid>
						</ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		    
		    <Style TargetType="CheckBox" x:Key="SliderCheckbox">
			    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
			    <Setter Property="FontSize" Value="15"/>
			    <Setter Property="Background" Value="{DynamicResource Background1}"/>
			    <Setter Property="Template">
				    <Setter.Value>
					    <ControlTemplate TargetType="CheckBox">
						    <Grid>
							    <Grid.ColumnDefinitions>
								    <ColumnDefinition Width="Auto"/>
								    <ColumnDefinition Width="Auto"/>
							    </Grid.ColumnDefinitions>
							    
							    <Border Grid.Column="0" Margin="0, 0, 7, 0" Background="{TemplateBinding Background}"
							            BorderBrush="{DynamicResource Text}" Padding="4" CornerRadius="12"
							            Width="56" BorderThickness="2">
								    <Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="Circle"
								             Width="16" Height="16" Fill="{DynamicResource Disabled}"/>
							    </Border>
							    
							    <ContentPresenter Grid.Column="1"
							                      HorizontalAlignment="Center"
							                      VerticalAlignment="Center"
							                      Focusable="False"/>
						    </Grid>
						    
						    <ControlTemplate.Triggers>
							    <Trigger Property="IsChecked" Value="True">
								    <Setter Property="Background" Value="{DynamicResource Primary1}"/>
								    <Setter TargetName="Circle" Property="Fill" Value="{DynamicResource Text}"/>
								    <Setter TargetName="Circle" Property="HorizontalAlignment" Value="Right"/>
							    </Trigger>
						    </ControlTemplate.Triggers>
					    </ControlTemplate>
				    </Setter.Value>
			    </Setter>
		    </Style>
		</ResourceDictionary>
    </Application.Resources>
</Application>
