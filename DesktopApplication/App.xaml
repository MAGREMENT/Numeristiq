<Application x:Class="DesktopApplication.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="/View/WelcomeWindow.xaml">
    <Application.Resources>
        <Brush x:Key="Background1">#0E0E15</Brush>
        <Brush x:Key="Background2">#1C1C2C</Brush>
        <Brush x:Key="Background3">#272742</Brush>
        <Brush x:Key="Primary1">#FC880B</Brush>
        <Brush x:Key="Primary2">#EE810C</Brush>
        <Brush x:Key="Secondary1">#F52A0A</Brush>
        <Brush x:Key="Secondary2">#E8280B</Brush>
        <Brush x:Key="Accent">#F50EE2</Brush>
	    <Brush x:Key="Text">#FFFFFF</Brush>
	    <Color x:Key="ThumbColor">#FFFFFF</Color>
	    
	    <Style TargetType="RadioButton" x:Key="SettingTitleStyle">
		    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
		    <Setter Property="FontSize" Value="18"/>
		    <Setter Property="Background" Value="Transparent"/>
		    <Setter Property="Template">
			    <Setter.Value>
				    <ControlTemplate TargetType="RadioButton">
					    <Border Background="{TemplateBinding Background}"
					            BorderThickness="0" Height="30">
						    <ContentPresenter Content="{TemplateBinding Content}"
						                      VerticalAlignment="Center"
						                      HorizontalAlignment="Center"></ContentPresenter>
					    </Border>
					    
					    <ControlTemplate.Triggers>
						    <Trigger Property="IsMouseOver" Value="True">
							    <Setter Property="Background" Value="{DynamicResource Primary1}"/>
						    </Trigger>
						    <Trigger Property="IsChecked" Value="True">
							    <Setter Property="FontWeight" Value="SemiBold"/>
						    </Trigger>
					    </ControlTemplate.Triggers>
				    </ControlTemplate>
			    </Setter.Value>
		    </Setter>
	    </Style>
        
        <Style TargetType="Button" x:Key="WelcomeButtonStyle">
	        <Setter Property="Foreground" Value="{DynamicResource Text}"></Setter>
	        <Setter Property="Background" Value="{DynamicResource Background2}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Background2}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="TextElement.FontSize" Value="20"/>
            <Setter Property="Template">
	            <Setter.Value>
		            <ControlTemplate TargetType="Button">
			            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
			                    Background="{TemplateBinding Background}" CornerRadius="5"
			                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2">
				            <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			            </Border>
            
			            <ControlTemplate.Triggers>
				            <Trigger Property="IsMouseOver" Value="True">
					            <Setter Property="BorderBrush" Value="{DynamicResource Primary1}"></Setter>
				            </Trigger>
			            </ControlTemplate.Triggers>
		            </ControlTemplate>
	            </Setter.Value>
            </Setter>
        </Style>
	    
	    <Style x:Key="BottomSelectionRadioButtonStyle" TargetType="RadioButton">
		    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
		    <Setter Property="Background" Value="{DynamicResource Background2}"/>
		    <Setter Property="FontSize" Value="18"/>
		    <Setter Property="FontWeight" Value="Normal"></Setter>
		    
		    <Setter Property="Template">
			    <Setter.Value>
				    <ControlTemplate TargetType="RadioButton">
					    <Border x:Name="CheckBorder" BorderThickness="0, 0, 0, 2"
					            BorderBrush="{TemplateBinding Background}"
					            Background="{TemplateBinding Background}"
					            VerticalAlignment="Stretch"
					            HorizontalAlignment="Stretch">
						    
						    <ContentPresenter
							    Margin="0"
							    HorizontalAlignment="Center"
							    VerticalAlignment="Center"
							    RecognizesAccessKey="True"
							    Content="{TemplateBinding Content}"/>
					    </Border>
					    
					    <ControlTemplate.Triggers>
						    <Trigger Property="IsChecked" Value="True">
							    <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{DynamicResource Secondary1}"/>
						    </Trigger>
						    
						    <Trigger Property="IsMouseOver" Value="True">
							    <Setter Property="Background" Value="{DynamicResource Background3}"/>
							    <Setter Property="Foreground" Value="{DynamicResource Primary1}"/>
						    </Trigger>
					    </ControlTemplate.Triggers>
				    </ControlTemplate>
			    </Setter.Value>
		    </Setter>
	    </Style>
	    
	    <ControlTemplate TargetType="Button" x:Key="LightUpButton">
		    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" 
		            Background="{DynamicResource Background2}" Margin="{TemplateBinding Margin}"
		            Padding="{TemplateBinding Padding}" x:Name="Border"
		            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
			    <ContentPresenter
				    Margin="0"
				    HorizontalAlignment="Center"
				    VerticalAlignment="Center"
				    RecognizesAccessKey="True"
				    Content="{TemplateBinding Content}"/>
		    </Border>
					    
		    <ControlTemplate.Triggers>
			    <Trigger Property="IsMouseOver" Value="True">
				    <Setter TargetName="Border" Property="Background" Value="{DynamicResource Background3}"/>
				    <Setter Property="BorderBrush" Value="{DynamicResource Text}"/>
			    </Trigger>
		    </ControlTemplate.Triggers>
	    </ControlTemplate>
	    
	    <Style x:Key="LogHighlightButton" TargetType="Button">
		    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
		    <Setter Property="VerticalAlignment" Value="Center"/>
		    <Setter Property="Template" Value="{StaticResource LightUpButton}"/>
		    <Setter Property="BorderBrush" Value="{DynamicResource Background3}"/>
	    </Style>
	    
	    <Style x:Key="SolvePageButtonStyle" TargetType="Button">
		    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
		    <Setter Property="FontSize" Value="18"/>
		    <Setter Property="Padding" Value="10"></Setter>
		    <Setter Property="Template" Value="{StaticResource LightUpButton}"/>
		    <Setter Property="BorderBrush" Value="{DynamicResource Background3}"/>
	    </Style>
	    
	    <Style x:Key="TransparentThumb" TargetType="Thumb">
		    <Setter Property="IsTabStop" Value="False"/>
		    <Setter Property="SnapsToDevicePixels" Value="True"/>
		    <Setter Property="Focusable" Value="False"/>
		    <Setter Property="Background">
			    <Setter.Value>
				    <SolidColorBrush Color="{DynamicResource ThumbColor}" Opacity="0.05"/>
			    </Setter.Value>
		    </Setter>
		    <Setter Property="Template">
			    <Setter.Value>
				    <ControlTemplate TargetType="Thumb">
					    <Border CornerRadius="1"
					            Background="{TemplateBinding Background}"
					            BorderThickness="0"/>
					    
					    <ControlTemplate.Triggers>
						    <Trigger Property="IsMouseOver" Value="True">
							    <Setter Property="Background">
								    <Setter.Value>
									    <SolidColorBrush Color="{DynamicResource ThumbColor}"/>
								    </Setter.Value>
							    </Setter>
						    </Trigger>
					    </ControlTemplate.Triggers>
				    </ControlTemplate>
			    </Setter.Value>
		    </Setter>
	    </Style>
	    
	    <Style x:Key="TransparentBar" TargetType="ScrollBar">
		    <Setter Property="SnapsToDevicePixels" Value="True"/>
		    <Setter Property="Template">
			    <Setter.Value>
				    <ControlTemplate TargetType="ScrollBar">
					    <Track IsDirectionReversed="True"
					           x:Name="PART_Track">
						    <Track.Thumb>
							    <Thumb Style="{StaticResource TransparentThumb}" Margin="1"/>
						    </Track.Thumb>
					    </Track>
				    </ControlTemplate>
			    </Setter.Value>
		    </Setter>
	    </Style>
	    
	    <Style x:Key="TransparentBarScrollView" TargetType="ScrollViewer">
		    <Setter Property="Background" Value="{DynamicResource Background2}"/>
		    <Setter Property="BorderBrush" Value="{DynamicResource Background3}"/>
		    <Setter Property="Template">
			    <Setter.Value>
				    <ControlTemplate TargetType="ScrollViewer">
					    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
						    <Grid>
							    <Grid.ColumnDefinitions>
								    <ColumnDefinition/>
								    <ColumnDefinition Width="Auto"/>
							    </Grid.ColumnDefinitions>
						    
							    <ScrollContentPresenter Grid.Column="0" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}"/>
						    
							    <ScrollBar Grid.Column="1"
							               Value="{TemplateBinding VerticalOffset}"
							               Maximum="{TemplateBinding ScrollableHeight}"
							               ViewportSize="{TemplateBinding ViewportHeight}"
							               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							               x:Name="PART_VerticalScrollBar"
							               Style="{StaticResource TransparentBar}"/>
						    </Grid>
					    </Border>
				    </ControlTemplate>
			    </Setter.Value>
		    </Setter>
	    </Style>
	    
        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
			<Setter Property="Foreground" Value="{DynamicResource Text}" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
			<Setter Property="IsTabStop" Value="False" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border
							x:Name="Border"
							Background="Transparent"
							BorderThickness="0"
							SnapsToDevicePixels="true">
							<ContentPresenter
								Margin="0"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Focusable="False"
								RecognizesAccessKey="True" />
						</Border>
						
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{DynamicResource Background3}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{DynamicResource Background3}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="Gray"></Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	    
	    <Style x:Key="LogRadioButton" TargetType="RadioButton">
		    <Setter Property="Background" Value="{DynamicResource Background2}"/>
		    <Setter Property="BorderBrush" Value="{DynamicResource Background2}"/>
		    <Setter Property="Foreground" Value="{DynamicResource Text}"/>
		    <Setter Property="FontSize" Value="16"/>
		    <Setter Property="Margin" Value="5"></Setter>
		    <Setter Property="Template">
			    <Setter.Value>
				    <ControlTemplate TargetType="RadioButton">
					    <Border Padding="5" BorderBrush="{TemplateBinding BorderBrush}"
					            Background="{TemplateBinding Background}" BorderThickness="0,0,0,2">
						    <ContentPresenter
							    Margin="0"
							    HorizontalAlignment="Center"
							    VerticalAlignment="Center"
							    Focusable="False"
							    RecognizesAccessKey="True" />
					    </Border>
					    
					    <ControlTemplate.Triggers>
						    <Trigger Property="IsMouseOver" Value="True">
							    <Setter Property="Background" Value="{DynamicResource Background3}"/>
						    </Trigger>
						    <Trigger Property="IsChecked" Value="True">
							    <Setter Property="BorderBrush" Value="{DynamicResource Text}"/>
						    </Trigger>
					    </ControlTemplate.Triggers>
				    </ControlTemplate>
			    </Setter.Value>
		    </Setter>
	    </Style>
	    
	    <Style x:Key="FullPrimaryButton" TargetType="Button">
		    <Setter Property="Foreground" Value="White"/>
		    <Setter Property="FontWeight" Value="SemiBold"/>
		    <Setter Property="FontSize" Value="15"/>
		    <Setter Property="Background" Value="{DynamicResource Primary2}"/>
		    <Setter Property="VerticalAlignment" Value="Center"/>
		    <Setter Property="Template">
			    <Setter.Value>
				    <ControlTemplate TargetType="Button">
					    <Border Padding="3" BorderThickness="0" Background="{TemplateBinding Background}"
					            CornerRadius="2">
						    <ContentPresenter
							    Margin="0"
							    HorizontalAlignment="Center"
							    VerticalAlignment="Center"
							    Focusable="False"
							    RecognizesAccessKey="True" />
					    </Border>
				    </ControlTemplate>
			    </Setter.Value>
		    </Setter>
		    
		    <Style.Triggers>
			    <Trigger Property="IsMouseOver" Value="True">
				    <Setter Property="Background" Value="{DynamicResource Accent}"></Setter>
			    </Trigger>
		    </Style.Triggers>
	    </Style>

		<Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
			<Setter Property="Foreground" Value="{DynamicResource Text}" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
			<Setter Property="IsTabStop" Value="False" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border
							x:Name="Border"
							Background="Transparent"
							BorderThickness="0"
							SnapsToDevicePixels="true">
							<ContentPresenter
								Margin="0"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Focusable="False"
								RecognizesAccessKey="True" />
						</Border>
						
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{DynamicResource Secondary1}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter TargetName="Border" Property="Background" Value="{DynamicResource Secondary2}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
    </Application.Resources>
</Application>
